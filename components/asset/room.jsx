"use client"

/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 /home/feri/Downloads/room.glb --transform --shadows 
Files: /home/feri/Downloads/room.glb [13.17MB] > room-transformed.glb [496.76KB] (96%)
Author: jimbogies (https://sketchfab.com/jimbogies)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/sitting-room-with-baked-textures-61fdbbef86b9496d80644492a84c916f
Title: Sitting Room with Baked Textures
*/

import { useGLTF } from '@react-three/drei'
import { CuboidCollider, RigidBody } from '@react-three/rapier'
import { useXR } from '@react-three/xr'
import { useRouter } from 'next/navigation'
import { toast } from 'react-toastify'

export function Room(props) {
  const { nodes, materials } = useGLTF('models/room-transformed.glb')

  const router = useRouter()

  const { session } = useXR()

  const endedTutor = () => {
    toast.success("Complete", { autoClose: 1000 })
    setTimeout(() => {
      endedSession()
      router.replace('/')
    }, 1500)
  }
  const endedSession = async () => {
    const end = await session.end()
  }
  return (
    <group {...props} dispose={null}>
      <RigidBody colliders="trimesh" type="fixed" onIntersectionEnter={() => endedTutor()}>
        <mesh castShadow receiveShadow geometry={nodes.Object_2.geometry} material={materials.material} rotation={[-Math.PI / 2, 0, 0]} scale={0.5} />
        <CuboidCollider args={[0.2, 0.02, 0.35]} position={[-1.25, 0.25, 0.8]} sensor />
      </RigidBody>
    </group>
  )
}

useGLTF.preload('models/room-transformed.glb')
